"""
Django settings for campusnavigationapp project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import dj_database_url
from dotenv import load_dotenv
import boto3
import logging
from pathlib import Path

load_dotenv()

# Set variables
def get_ssm_parameter(param_name, default=None):
    ssm = boto3.client('ssm', region_name='us-east-2')
    try:
        response = ssm.get_parameter(Name=param_name, WithDecryption=True)
        return response['Parameter']['Value']
    except ssm.exceptions.ParameterNotFound:
        return default

def get_env_variable(var_name, ssm_path=None):
    # First, try to get from environment (including .env file)
    value = os.getenv(var_name)
    if value is not None:
        return value
    
    # If not found in environment, try SSM if path is provided
    if ssm_path:
        return get_ssm_parameter(ssm_path)
    
    return None

# Access variables
DEBUG = get_env_variable('DEBUG', '/campusnavigation/DEBUG') == 'True'
SECRET_KEY = get_env_variable('SECRET_KEY', '/campusnavigation/SECRET_KEY')
EMAIL_BACKEND = get_env_variable('EMAIL_BACKEND', '/campusnavigation/EMAIL_BACKEND')
DEFAULT_FROM_EMAIL= get_env_variable('DEFAULT_FROM_EMAIL', '/campusnavigation/DEFAULT_FROM_EMAIL')
DATABASE_URL= get_env_variable('DATABASE_URL', '/campusnavigation/DATABASE_URL')
EMAIL_PORT = 587
EMAIL_USE_TLS = True

if not DEBUG:
    sts_client = boto3.client('sts')
    assumed_role_object = sts_client.assume_role(
        RoleArn=get_ssm_parameter('/campusnavigationapp/AWS_ROLE_ARN'),
        RoleSessionName="CampusNavigationApp_Session"
    )
    credentials = assumed_role_object['Credentials']
    AWS_SES_CONFIGURATION_SET = 'CampusNavigationAppAccounts'
    AWS_ACCESS_KEY_ID = credentials['AccessKeyId']
    AWS_SECRET_ACCESS_KEY = credentials['SecretAccessKey']
    AWS_SESSION_TOKEN = credentials['SessionToken']
    AWS_SES_REGION_NAME = 'us-east-2'
    AWS_SES_REGION_ENDPOINT = 'email-smtp.us-east-2.amazonaws.com'
    USE_SES_V2 = True

# Logging 
print("\nEnvironment Variables")
print(f"DEBUG: {DEBUG}")
print(f"SECRET_KEY: {SECRET_KEY}")
print(f"EMAIL_BACKEND: {EMAIL_BACKEND}")
print(f"EMAIL_HOST: {AWS_ACCESS_KEY_ID}")
print(f"DATABASE_URL: {DATABASE_URL}")
print("\n")
boto3.set_stream_logger('', logging.DEBUG)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ALLOWED_HOSTS = ["*"]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'campusnavigationapp',
    'magiclink',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'campusnavigationapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'campusnavigationapp.wsgi.application'

AUTHENTICATION_BACKENDS = (
    'magiclink.backends.MagicLinkBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

if not DEBUG:
    config = dj_database_url.config(
            default=DATABASE_URL, 
            conn_max_age=600, 
            conn_health_checks=True
            )
    config.update({
        'OPTIONS': {
            'options': '-c search_path=campusnavigationapp',
        },
        'SCHEMA': 'campusnavigationapp',
    })

    DATABASES = {
        'default': config
    }
else:
    DATABASES = {
        'default': dj_database_url.config(default=DATABASE_URL)
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'campusnavigationapp/static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CSRF_TRUSTED_ORIGINS = ['https://uwmnav.dedyn.io']

MAGICLINK_LOGIN_TEMPLATE_NAME = 'magiclink/login.html'
MAGICLINK_LOGIN_SENT_TEMPLATE_NAME = 'magiclink/login_sent.html'
MAGICLINK_LOGIN_FAILED_TEMPLATE_NAME = 'magiclink/login_failed.html'

LOGIN_URL = '/auth/login/'
LOGIN_REDIRECT_URL = '/map/'

MAGICLINK_TOKEN_USES = 3

MAGICLINK_AUTH_TIMEOUT = 300
MAGICLINK_IGNORE_EMAIL_CASE = True
MAGICLINK_EMAIL_AS_USERNAME = True
MAGICLINK_REQUIRE_SIGNUP = False
REQUIRE_SIGNUP = False
REQUIRE_SAME_BROWSER = False
MAGICLINK_REQUIRE_SAME_BROWSER = False
MAGICLINK_REQUIRE_SAME_IP = False
MAGICLINK_ALLOW_SUPERUSER_LOGIN = True
MAGICLINK_ALLOW_STAFF_LOGIN = True
MAGICLINK_VERIFY_INCLUDE_EMAIL = False
LOGIN_SENT_REDIRECT = 'magiclink:login_sent'


MAGICLINK_EMAIL_TEMPLATE_NAME_HTML = 'magiclink/login_email.html'